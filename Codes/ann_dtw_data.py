# -*- coding: utf-8 -*-
"""ANN_DTW_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LkTJtpqoLbgrilXlST2veYiiNgPCGVcv

#Converting .mat file to pandas dataframe
Reference: https://towardsdatascience.com/how-to-load-matlab-mat-files-in-python-1f200e1287b5Â¶
"""

from google.colab import drive 
drive.mount('drive', force_remount = False)

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import sklearn
from scipy.io import loadmat
from sklearn.model_selection import train_test_split
import scipy
from sklearn import preprocessing
import random
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Dropout
from statistics import median
from keras.preprocessing.sequence import pad_sequences

def create_csv(path):
  data = loadmat(path)
  df = pd.DataFrame(data['tsDS'], columns = ['time', 'acc_x'])
  return df

"""#2.0 inch stickout distance"""

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_320_005.mat"
df_2p0_c_320_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_425_020.mat"
df_2p0_c_425_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_425_025.mat"
df_2p0_c_425_025 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_570_001.mat"
df_2p0_c_570_001 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_570_002.mat"
df_2p0_c_570_002 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_570_005.mat"
df_2p0_c_570_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_570_010.mat"
df_2p0_c_570_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_770_001.mat"
df_2p0_c_770_001 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_770_002.mat"
df_2p0_c_770_002 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_770_002_2.mat"
df_2p0_c_770_002_2 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_770_005.mat"
df_2p0_c_770_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/c_770_010.mat"
df_2p0_c_770_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_320_005.mat"
df_2p0_i_320_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_320_010.mat"
df_2p0_i_320_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_425_020.mat"
df_2p0_i_425_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_425_025.mat"
df_2p0_i_425_025 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_570_002.mat"
df_2p0_i_570_002 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_570_005.mat"
df_2p0_i_570_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_570_010.mat"
df_2p0_i_570_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/i_770_001.mat"
df_2p0_i_770_001 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_005.mat"
df_2p0_s_320_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_010.mat"
df_2p0_s_320_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_015.mat"
df_2p0_s_320_015 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_020.mat"
df_2p0_s_320_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_020_2.mat"
df_2p0_s_320_020_2 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_025.mat"
df_2p0_s_320_025 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_030.mat"
df_2p0_s_320_030 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_035.mat"
df_2p0_s_320_035 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_040.mat"
df_2p0_s_320_040 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_045.mat"
df_2p0_s_320_045 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_050.mat"
df_2p0_s_320_050 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_320_050_2.mat"
df_2p0_s_320_050_2 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_425_005.mat"
df_2p0_s_425_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_425_010.mat"
df_2p0_s_425_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_425_015.mat"
df_2p0_s_425_015 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_425_017.mat"
df_2p0_s_425_017 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_425_020.mat"
df_2p0_s_425_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_570_002.mat"
df_2p0_s_570_002 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/s_570_005.mat"
df_2p0_s_570_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_320_005.mat"
df_2p0_u_320_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_320_010.mat"
df_2p0_u_320_010 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_320_020.mat"
df_2p0_u_320_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_320_050.mat"
df_2p0_u_320_050 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_425_017.mat"
df_2p0_u_425_017 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_425_017_2.mat"
df_2p0_u_425_017_2 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_425_020.mat"
df_2p0_u_425_020 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_570_002.mat"
df_2p0_u_570_002 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_570_005.mat"
df_2p0_u_570_005 = create_csv(path)

path = "drive/MyDrive/cutting_tests_processed/2inch_stickout/u_770_002.mat"
df_2p0_u_770_002 = create_csv(path)

"""# 2.5 inch stickout distance

"""

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/c_570_014.mat"
# df_2p5_c_570_014 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/c_570_015s.mat"
# df_2p5_c_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/c_770_005.mat"
# df_2p5_c_770_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/i_570_012.mat"
# df_2p5_i_570_012 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/i_570_014.mat"
# df_2p5_i_570_014 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/i_570_015s.mat"
# df_2p5_i_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/i_770_005.mat"
# df_2p5_i_770_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_003.mat"
# df_2p5_s_570_003 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_005.mat"
# df_2p5_s_570_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_005_2.mat"
# df_2p5_s_570_005_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_008.mat"
# df_2p5_s_570_008 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_010.mat"
# df_2p5_s_570_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_015.mat"
# df_2p5_s_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_570_015_2.mat"
# df_2p5_s_570_015_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_770_002.mat"
# df_2p5_s_770_002 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/s_770_005.mat"
# df_2p5_s_770_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_005.mat"
# df_2p5_u_570_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_005_2.mat"
# df_2p5_u_570_005_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_015.mat"
# df_2p5_u_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_015_2.mat"
# df_2p5_u_570_015_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_015_3.mat"
# df_2p5_u_570_015_3 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_570_015_4.mat"
# df_2p5_u_570_015_4 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/2p5inch_stickout/u_770_002.mat"
# df_2p5_u_770_002 = create_csv(path)

"""# 3.5 inch stickout distance"""

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/c_1030_002.mat"
# df_3p5_c_1030_002 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/c_770_015.mat"
# df_3p5_c_770_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/i_770_010.mat"
# df_3p5_i_770_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/i_770_010_2.mat"
# df_3p5_i_770_010_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/i_770_015.mat"
# df_3p5_i_770_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_570_015.mat"
# df_3p5_s_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_570_025.mat"
# df_3p5_s_570_025 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_570_025_2.mat"
# df_3p5_s_570_025_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_570_030.mat"
# df_3p5_s_570_030 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_770_005.mat"
# df_3p5_s_770_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_770_008.mat"
# df_3p5_s_770_008 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_770_010.mat"
# df_3p5_s_770_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_770_010_2.mat"
# df_3p5_s_770_010_2 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/s_770_015.mat"
# df_3p5_s_770_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/u_570_015.mat"
# df_3p5_u_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/u_570_025.mat"
# df_3p5_u_570_025 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/u_570_030.mat"
# df_3p5_u_570_030 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/u_770_005.mat"
# df_3p5_u_770_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/3p5inch_stickout/u_770_015.mat"
# df_3p5_u_770_015 = create_csv(path)

"""# 4.5 inch stickout distance"""

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/c_1030_010.mat"
# df_4p5_c_1030_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/c_1030_015.mat"
# df_4p5_c_1030_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/c_1030_016.mat"
# df_4p5_c_1030_016 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/c_570_035.mat"
# df_4p5_c_570_035 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/c_570_040.mat"
# df_4p5_c_570_040 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/i_1030_010.mat"
# df_4p5_i_1030_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/i_1030_012.mat"
# df_4p5_i_1030_012 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/i_1030_013.mat"
# df_4p5_i_1030_013 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/i_1030_014.mat"
# df_4p5_i_1030_014 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_1030_005.mat"
# df_4p5_s_1030_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_1030_007.mat"
# df_4p5_s_1030_007 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_1030_013.mat"
# df_4p5_s_1030_013 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_1030_014.mat"
# df_4p5_s_1030_014 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_005.mat"
# df_4p5_s_570_005 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_010.mat"
# df_4p5_s_570_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_015.mat"
# df_4p5_s_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_025.mat"
# df_4p5_s_570_025 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_035.mat"
# df_4p5_s_570_035 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_570_040.mat"
# df_4p5_s_570_040 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_770_010.mat"
# df_4p5_s_770_010 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_770_015.mat"
# df_4p5_s_770_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/s_770_020.mat"
# df_4p5_s_770_020 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/u_570_015.mat"
# df_4p5_u_570_015 = create_csv(path)

# path = "drive/MyDrive/cutting_tests_processed/4p5inch_stickout/u_570_040.mat"
# df_4p5_u_570_040 = create_csv(path)

df_2p0_list = [df_2p0_c_320_005, df_2p0_c_425_020, df_2p0_c_425_025, df_2p0_c_570_001, df_2p0_c_570_002,
               df_2p0_c_570_005, df_2p0_c_570_010, df_2p0_c_770_001, df_2p0_c_770_002, df_2p0_c_770_002_2,
                df_2p0_c_770_005, df_2p0_c_770_010 , df_2p0_i_320_005, df_2p0_i_320_010, df_2p0_i_425_020,
               df_2p0_i_425_025, df_2p0_i_570_002, df_2p0_i_570_005, df_2p0_i_570_010, df_2p0_i_770_001,
              df_2p0_s_320_005, df_2p0_s_320_010, df_2p0_s_320_015, df_2p0_s_320_020, df_2p0_s_320_020_2,
               df_2p0_s_320_025, df_2p0_s_320_030, df_2p0_s_320_035, df_2p0_s_320_040, df_2p0_s_320_045,
                df_2p0_s_320_050, df_2p0_s_320_050_2, df_2p0_s_425_005, df_2p0_s_425_010, df_2p0_s_425_015,
               df_2p0_s_425_017, df_2p0_s_425_020, df_2p0_s_570_002, df_2p0_s_570_005, df_2p0_u_320_005,
                df_2p0_u_320_010, df_2p0_u_320_020, df_2p0_u_320_050, df_2p0_u_425_017, df_2p0_u_425_017_2,
               df_2p0_u_425_020, df_2p0_u_570_002, df_2p0_u_570_005, df_2p0_u_770_002]


# df_2p5_list = [df_2p5_c_570_014, df_2p5_c_570_015, df_2p5_c_770_005, df_2p5_i_570_012, df_2p5_i_570_014,
#                df_2p5_i_570_015, df_2p5_i_770_005, df_2p5_s_570_003, df_2p5_s_570_005, df_2p5_s_570_005_2,
#                df_2p5_s_570_008, df_2p5_s_570_010, df_2p5_s_570_015, df_2p5_s_570_015_2, df_2p5_s_770_002,
#                df_2p5_s_770_005, df_2p5_u_570_005, df_2p5_u_570_005_2, df_2p5_u_570_015, df_2p5_u_570_015_2,
#                df_2p5_u_570_015_3, df_2p5_u_570_015_4, df_2p5_u_770_002]

# df_3p5_list = [df_3p5_c_1030_002, df_3p5_c_770_015, df_3p5_i_770_010, df_3p5_i_770_010_2, df_3p5_i_770_015,
#                df_3p5_s_570_015, df_3p5_s_570_025, df_3p5_s_570_025_2, df_3p5_s_570_030, df_3p5_s_770_005,
#                df_3p5_s_770_008, df_3p5_s_770_010, df_3p5_s_770_010_2, df_3p5_s_770_015, df_3p5_u_570_015,
#                df_3p5_u_570_025, df_3p5_u_570_030, df_3p5_u_770_005, df_3p5_u_770_015]


# df_4p5_list = [df_4p5_c_1030_010, df_4p5_c_1030_015, df_4p5_c_1030_016, df_4p5_c_570_035, df_4p5_c_570_040, df_4p5_i_1030_010,
#                df_4p5_i_1030_013, df_4p5_i_1030_014, df_4p5_s_1030_007, df_4p5_s_1030_013, df_4p5_s_1030_014, df_4p5_s_570_005,
#                 df_4p5_s_570_010, df_4p5_s_570_015, df_4p5_s_570_025, df_4p5_s_570_035, df_4p5_s_570_040, df_4p5_s_770_010,
#                df_4p5_s_770_015, df_4p5_s_770_020, df_4p5_u_570_015, df_4p5_u_570_040]

output_list = [3] * 12 + [2] * 8 + [0] * 19 + [1] * 10

len(output_list)

def standardization(df):
  std = preprocessing.StandardScaler()
  for x in df.columns:
    if (x!='time'):
      df[x] = std.fit_transform(np.array(df[x]).reshape(-1,1))
  return df

def standardized_data(df_list):
  df_ans_list = []
  for i in range(len(df_list)):
    df = standardization(df_list[i])
    df_ans_list.append(df)
  return df_ans_list

# df_2p0_list[0]

df_2p0_list = standardized_data(df_2p0_list)

# df_2p5_list = standardized_data(df_2p5_list)

# df_3p5_list = standardized_data(df_3p5_list)

# df_4p5_list = standardized_data(df_4p5_list)

def time_2_freq_conversion(df, ti):
    Fx = np.array(df.acc_x)
    X = scipy.fft.fft(Fx)
    # print(X)
    N = len(X)
    # print(N)
    n = np.arange(N)
    # print(n)
    # get the sampling rate
    sr = 1 / (10000)
    # print(sr)
    T = N/sr
    # print(T)
    freq = n/T
    # print(freq) 

    # Get the one-sided specturm
    n_oneside = N//2
    # print(n_oneside)
    # get the one side frequency
    f_oneside = freq[:n_oneside]
    # print(f_oneside)

    plt.figure(figsize = (60, 10))
    plt.plot(f_oneside, np.abs(X[:n_oneside]), 'b')
    # plt.xlim(0, 0.5*(1e-7))
    # plt.ylim(0, 0.5*(1e7))
    st = "Frequency_"
    st+="acc_x"
    st+=" (Hz)"
    plt.xlabel(st)
    st = "FFT Amplitude |"
    st+= "acc_x"
    st+="(freq)|"
    plt.ylabel(st)
    plt.savefig(ti)

def input_func(df_2p0_list):
  acc_x_input_list = []
  for i in range(len(df_2p0_list)):
    acc_x_list = np.array(df_2p0_list[i].acc_x)
    acc_x_input_list.append(acc_x_list)
  return acc_x_input_list

df_2p0_input_list = input_func(df_2p0_list)

df_2p0_input_list = pad_sequences(df_2p0_input_list, maxlen = 80000, dtype = "float", padding = "post", truncating = "post")

"""# Train Test Split"""

def train_test_generator(df_list, test_num, val_num, output_list):
  train_X = []
  val_X = []
  test_X = []
  train_y = []
  test_y = []
  val_y = []
  for i in range(len(df_list)):
    if i in test_num:
      test_X.append(df_list[i])
      test_y.append(output_list[i])
    elif i in val_num:
      val_X.append(df_list[i])
      val_y.append(output_list[i])
    else:
      train_X.append(df_list[i])
      train_y.append(output_list[i])
  train_X = np.array(train_X)
  train_y = np.array(train_y)
  val_X = np.array(val_X)
  val_y = np.array(val_y)
  test_X = np.array(test_X)
  test_y = np.array(test_y)
  return train_X, train_y, val_X, val_y, test_X, test_y

test_num = [4, 9, 15, 22, 26, 31, 33, 35, 36, 40]
val_num = [7, 17, 30, 37]

train_X, train_y, val_X, val_y,  test_X, test_y = train_test_generator(df_2p0_input_list, test_num, val_num, output_list)

print(train_X.shape)
print(train_y.shape)
print(val_X.shape)
print(val_y.shape)
print(test_X.shape)
print(test_y.shape)

print(type(train_X))
print(type(train_X[0]))

train_X[0]

shape_list = []
for i in range(len(train_X)):
  shape_list.append(train_X[i].shape[0])
print(max(shape_list))
print(min(shape_list))
print((sum(shape_list))/len(shape_list))
print(median(shape_list))

"""# Defining the Artificial Neural Network using keras"""

model = Sequential()
model.add(Dense(40, input_dim = 80000, activation = "relu", kernel_regularizer = "l1"))
model.add(Dropout(0.3))
model.add(Dense(10, activation = "relu", kernel_regularizer = "l1"))
model.add(Dropout(0.1))
model.add(Dense(4, activation = "softmax"))

"""# Compiling the model"""

model.compile(loss = "sparse_categorical_crossentropy", optimizer = "adam", metrics = ["accuracy"])

"""# Fitting the model"""

history = model.fit(train_X, train_y, validation_data=(val_X, val_y), epochs=100, verbose=0)

"""# Evaluatiing the model"""

_, train_acc = model.evaluate(train_X, train_y, verbose=0)
_, val_acc = model.evaluate(val_X, val_y, verbose = 0)
_, test_acc = model.evaluate(test_X, test_y, verbose=0)
print('Train: %.3f, Val: %.3f, Test: %.3f' % (train_acc, val_acc, test_acc))

"""#Plotting loss during training"""

plt.figure(figsize = (10,10))
plt.subplot(211)
plt.title('Loss')
plt.plot(history.history['loss'], label='train')
plt.plot(history.history['val_loss'], label='val')
plt.legend()

"""# Plotting accuracy during training"""

plt.figure(figsize = (10,10))
plt.subplot(212)
plt.title('Accuracy')
plt.plot(history.history['accuracy'], label='train')
plt.plot(history.history['val_accuracy'], label='val')
plt.legend()